--- pgsql/src/backend/utils/adt/date.c	2003/07/24 04:38:27	1.73.2.7
+++ pgsql/src/backend/utils/adt/date.c	2005/04/23 22:54:03	1.73.2.8
@@ -8,7 +8,7 @@
  *
  *
  * IDENTIFICATION
- *	  $Header: /cvsroot/pgsqlrpms/patches/7.3/postgresql-7.3-timezone.patch,v 1.1 2005/04/25 07:47:17 madness Exp $
+ *	  $Header: /cvsroot/pgsqlrpms/patches/7.3/postgresql-7.3-timezone.patch,v 1.1 2005/04/25 07:47:17 madness Exp $
  *
  *-------------------------------------------------------------------------
  */
@@ -1414,12 +1414,20 @@ timetz_scale(PG_FUNCTION_ARGS)
 static int
 timetz_cmp_internal(TimeTzADT *time1, TimeTzADT *time2)
 {
+	/* Primary sort is by true (GMT-equivalent) time */
+#ifdef HAVE_INT64_TIMESTAMP
+	int64		t1,
+				t2;
+
+	t1 = time1->time + (time1->zone * INT64CONST(1000000));
+	t2 = time2->time + (time2->zone * INT64CONST(1000000));
+#else
 	double		t1,
 				t2;
 
-	/* Primary sort is by true (GMT-equivalent) time */
 	t1 = time1->time + time1->zone;
 	t2 = time2->time + time2->zone;
+#endif
 
 	if (t1 > t2)
 		return 1;
@@ -1986,9 +1994,9 @@ timetz_part(PG_FUNCTION_ARGS)
 	else if ((type == RESERV) && (val == DTK_EPOCH))
 	{
 #ifdef HAVE_INT64_TIMESTAMP
-		result = ((time->time / 1000000e0) - time->zone);
+		result = ((time->time / 1000000e0) + time->zone);
 #else
-		result = (time->time - time->zone);
+		result = (time->time + time->zone);
 #endif
 	}
 	else
