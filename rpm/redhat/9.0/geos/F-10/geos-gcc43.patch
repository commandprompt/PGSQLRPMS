--- source/index/quadtree/DoubleBits.cpp.orig	2008-04-20 14:38:13.000000000 +0300
+++ source/index/quadtree/DoubleBits.cpp	2008-04-20 14:39:29.000000000 +0300
@@ -21,7 +21,7 @@
 #include <geos/index/quadtree/DoubleBits.h>
 #include <geos/util/IllegalArgumentException.h>
 
-#include <string>
+#include <cstring>
 
 #if __STDC_IEC_559__
 #define ASSUME_IEEE_DOUBLE 1
--- source/io/StringTokenizer.cpp.orig	2008-04-20 14:40:50.000000000 +0300
+++ source/io/StringTokenizer.cpp	2008-04-20 14:41:56.000000000 +0300
@@ -16,6 +16,7 @@
 
 #include <geos/io/StringTokenizer.h>
 
+#include <cstdlib>
 #include <string>
 
 using namespace std;
--- source/io/ByteOrderValues.cpp.orig	2008-04-20 14:43:01.000000000 +0300
+++ source/io/ByteOrderValues.cpp	2008-04-20 14:43:25.000000000 +0300
@@ -22,6 +22,7 @@
 #include <geos/util.h>
 
 #include <cassert>
+#include <cstring>
 
 namespace geos {
 namespace io { // geos.io
--- source/noding/FastNodingValidator.cpp.orig	2008-04-20 14:45:05.000000000 +0300
+++ source/noding/FastNodingValidator.cpp	2008-04-20 14:47:11.000000000 +0300
@@ -17,12 +17,13 @@
  *
  **********************************************************************/
 
-#include <geos/noding/FastNodingValidator.h>
+
 #include <geos/noding/MCIndexNoder.h> // for checkInteriorIntersections()
 #include <geos/noding/SingleInteriorIntersectionFinder.h>
 #include <geos/util/TopologyException.h> // for checkValid()
 #include <geos/geom/Coordinate.h>
 #include <geos/io/WKTWriter.h> // for getErrorMessage()
+#include <geos/noding/FastNodingValidator.h>
 
 #include <string>
 #include <iostream>
--- source/headers/geos/noding/IntersectionAdder.h.orig	2008-04-20 14:51:53.000000000 +0300
+++ source/headers/geos/noding/IntersectionAdder.h	2008-04-20 14:55:11.000000000 +0300
@@ -19,6 +19,7 @@
 #include <vector>
 #include <iostream>
 #include <cmath> // for abs()
+#include <cstdlib>
 
 #include <geos/inline.h>
 
--- source/operation/buffer/OffsetCurveSetBuilder.cpp.orig	2008-04-20 14:59:03.000000000 +0300
+++ source/operation/buffer/OffsetCurveSetBuilder.cpp	2008-04-20 14:59:25.000000000 +0300
@@ -37,6 +37,7 @@
 #include <geos/geomgraph/Label.h>
 #include <geos/noding/SegmentString.h>
 
+#include <typeinfo>
 #include <cmath>
 #include <vector>
 #include <memory>
--- source/operation/distance/ConnectedElementPointFilter.cpp.orig	2008-04-20 15:00:20.000000000 +0300
+++ source/operation/distance/ConnectedElementPointFilter.cpp	2008-04-20 15:00:34.000000000 +0300
@@ -19,6 +19,7 @@
 #include <geos/geom/LineString.h>
 #include <geos/geom/Polygon.h>
 
+#include <typeinfo>
 #include <vector>
 
 using namespace std;
--- source/planargraph/DirectedEdge.cpp.orig	2008-04-20 15:02:04.000000000 +0300
+++ source/planargraph/DirectedEdge.cpp	2008-04-20 15:02:19.000000000 +0300
@@ -18,6 +18,7 @@
 #include <geos/geomgraph/Quadrant.h>
 #include <geos/algorithm/CGAlgorithms.h>
 
+#include <typeinfo>
 #include <cmath>
 #include <sstream>
 #include <vector>
--- source/geomgraph/EdgeNodingValidator.cpp.orig	2008-04-20 15:03:37.000000000 +0300
+++ source/geomgraph/EdgeNodingValidator.cpp	2008-04-20 15:03:44.000000000 +0300
@@ -18,10 +18,10 @@
 
 #include <vector>
 
+#include <geos/geom/CoordinateSequence.h>
 #include <geos/geomgraph/EdgeNodingValidator.h>
 #include <geos/geomgraph/Edge.h>
 #include <geos/noding/SegmentString.h>
-#include <geos/geom/CoordinateSequence.h>
 
 using namespace std;
 using namespace geos::noding;
--- source/geomgraph/GeometryGraph.cpp.orig	2008-04-20 15:04:36.000000000 +0300
+++ source/geomgraph/GeometryGraph.cpp	2008-04-20 15:04:50.000000000 +0300
@@ -42,6 +42,7 @@
 
 #include <geos/inline.h>
 
+#include <typeinfo>
 #include <vector>
 #include <memory> // auto_ptr
 #include <cassert>
--- source/precision/SimpleGeometryPrecisionReducer.cpp.orig	2008-04-20 15:05:36.000000000 +0300
+++ source/precision/SimpleGeometryPrecisionReducer.cpp	2008-04-20 15:05:47.000000000 +0300
@@ -29,6 +29,7 @@
 #include <geos/geom/LineString.h>
 #include <geos/geom/LinearRing.h>
 
+#include <typeinfo>
 #include <vector>
 
 using namespace std;
--- doc/example.cpp.orig	2008-04-20 15:06:43.000000000 +0300
+++ doc/example.cpp	2008-04-20 15:07:38.000000000 +0300
@@ -28,6 +28,7 @@
  *
  **********************************************************************/
 
+#include <cstdlib>
 #include <vector>
 #include <sstream>
 #include <iomanip>
--- tests/bigtest/TestSweepLineSpeed.cpp.orig	2008-04-20 15:09:01.000000000 +0300
+++ tests/bigtest/TestSweepLineSpeed.cpp	2008-04-20 15:09:26.000000000 +0300
@@ -88,7 +88,7 @@
 //	cout << "n Pts: " << nPts << "   Executed in " << totalTime << endl;
 }
 
-int main(int /* argC */, char* /* argV[] */) {
+int main(int /* argC */, char** /* argV[] */) {
 
 	GeometryFactory *fact=new GeometryFactory();
 
--- tests/xmltester/XMLTester.cpp.orig	2008-04-20 15:10:47.000000000 +0300
+++ tests/xmltester/XMLTester.cpp	2008-04-20 15:16:59.000000000 +0300
@@ -16,6 +16,7 @@
 
 //#define _CRTDBG_MAP_ALLOC
 //#include <stdlib.h>
+#include <cstring>
 #ifdef _MSC_VER
 #include <crtdbg.h>
 #endif
--- tests/xmltester/markup/MarkupSTL.cpp.orig	2008-04-20 15:17:52.000000000 +0300
+++ tests/xmltester/markup/MarkupSTL.cpp	2008-04-20 15:19:43.000000000 +0300
@@ -8,8 +8,9 @@
 // Use in commercial applications requires written permission
 // This software is provided "as is", with no warranty.
 
-#include "MarkupSTL.h"
+#include <string.h>
 #include <stdio.h>
+#include "MarkupSTL.h"
 
 using namespace std;
 
--- tests/unit/geos_unit.cpp.orig	2008-04-20 16:51:51.000000000 +0300
+++ tests/unit/geos_unit.cpp	2008-04-20 16:52:14.000000000 +0300
@@ -4,6 +4,8 @@
 #endif
 #endif
 
+#include <cstdlib>
+
 // TUT
 #include <tut.h>
 #include <tut_reporter.h>
